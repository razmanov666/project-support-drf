version: "3.10"
services:
  # rest-api:
  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: "support_app_db"
      POSTGRES_USER: "alexey_razmanov"
      POSTGRES_PASSWORD: "123123"
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U alexey_razmanov -d support_app_db"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  web:
    build: .
    # command: bash -c "
    #          python support/manage.py makemigrations userauth
    #          && python support/manage.py makemigrations comment
    #          && python support/manage.py makemigrations ticket
    #          && python support/manage.py migrate userauth
    #          && python support/manage.py migrate comment
    #          && python support/manage.py migrate ticket
    #          && python support/manage.py migrate
    #          && python support/manage.py runserver 0.0.0.0:8000"
    command: bash -c "
             python support/manage.py makemigrations
             && python support/manage.py migrate"
            #  && python support/manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=support_app_db
      - POSTGRES_USER=alexey_razmanov
      - POSTGRES_PASSWORD=123123
    depends_on:
      - postgres
  # redis:
  # celery:
